% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regression.R
\name{regress}
\alias{regress}
\title{SVM regression}
\usage{
regress(data, y, coeff = "mean", kernel, p = 0.2, plong, C = 1,
  H = NULL, E = 0.1, k)
}
\arguments{
\item{data}{Input data: a matrix or data.frame with predictor variables. To perform MKL: a list of the *m* types of data to combine.}

\item{y}{Reponse variable (continuous)}

\item{coeff}{ONLY IN MKL CASE: A *tÂ·m* matrix of the coefficients, where *m* are the number of different data types and *t* the number of
different coefficient combinations to evaluate via k-CV. If absent, the same weight is given to all data sources.}

\item{kernel}{"linear" for linear kernel, cRBF" for clrRBF, "qJac" for quantitative Jaccard and  "wqJacc" for quantitative Jaccard with weights.
"matrix" if a pre-calculated kernel matrix is given as input. To perform MKL: Vector of *m* kernels to apply to each data type.}

\item{p}{The proportion of data reserved for the test set. Otherwise, a vector containing the indexes or the names of the rows for testing.}

\item{plong}{Longitudinal}

\item{C}{A cost, or a vector with the possible costs to evaluate via k-Cross-Val.}

\item{H}{Gamma hyperparameter. A vector with the possible values to chose the best one via k-Cross-Val can be entered.
For the MKL, a list with *m* entries can be entered, being' *m* is the number of different data types. Each element on the list
must be a number or, if k-Cross-Validation is needed, a vector with the hyperparameters to evaluate for each data type.}

\item{E}{Epsilon hyperparameter, or a vector with the possible epsilons to evaluate via k-Cross-Val.}

\item{k}{The k for the k-Cross Validation. Minimum k = 2. If no argument is provided cross-validation is not performed.}
}
\value{
NMSE (normalized mean squared error)
}
\description{
regress() automatically trains a Support Vector Regrssion model, tests it and returns the Normalized Mean Squared Error.
}
\details{
If the input data has repeated rownames, classify() will consider that the row names that share id are repeated
measures from the same individual. The function will ensure that all repeated measures are used either to train
or to test the model, but not for both, thus preserving the independence between the training and tets sets.
}
\examples{
# Data normalization
soilData <- CSSnorm(data=t(soilDataRaw[-89,]))
# Simple regression without tuning the hyperparameters
regress(data=soilData,soilMetaData$ph[-89],kernel="qJac")
# The percentage of data for training can be changed (default: 0.8 Training / 0.2 Test):
regress(data=soilData,soilMetaData$ph[-89],kernel="qJac",p=0.6)
# Regression with 10-Cross-Validation to choose the best Cost and Epsilon:
regress(data=soilData, y=soilMetaData$ph[-89], kernel="qJac", C=c(0.1,1,10), E = c(0.01,0.1), k=10)
}
