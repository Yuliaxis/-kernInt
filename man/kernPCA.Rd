% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unsupervised.R
\name{kernPCA}
\alias{kernPCA}
\title{kernel PCA}
\usage{
kernPCA(
  data,
  comb = "mean",
  kernel,
  plot = TRUE,
  H = NULL,
  domain = NULL,
  y,
  dim = c(1, 2),
  colors,
  na.col = "grey70",
  title,
  legend = TRUE,
  labels = FALSE
)
}
\arguments{
\item{data}{Input data: a matrix or data.frame.}

\item{comb}{If data is a list or array: how to combine them ("mean","statis","full","sparse" or a vector of coefficients)}

\item{kernel}{lin" or rbf" to standard Linear and RBF kernels. "clin" for compositional linear and "crbf" for Aitchison-RBF
kernels. "jac" for quantitative Jaccard / Ruzicka kernel. "jsk" for Jensen-Shannon Kernel. "flin" and "frbf" for functional linear
and functional RBF kernels. "matrix" if a pre-computed kernel matrix is given as input.
With an array or a list of length *m*: Vector of *m* kernels to apply to each dataset.}

\item{plot}{TRUE to return the plot, FALSE to return the projection object}

\item{H}{Kernel gamma hyperparameter if needed (only RBF-like kernels)}

\item{domain}{Only used in "frbf" or "flin".}

\item{y}{Response vector; optional. Colors each dot (individual) according to its value in the response / target variable.}

\item{dim}{The two PC that have to be displayed. Defaults to the two first PC.}

\item{colors}{Dot fill color; optional.}

\item{na.col}{Depends on y and colors. Dot fill color for the y missing values; defaults to grey.}

\item{title}{Plot title}

\item{legend}{Defaults to TRUE. A legend with the color corresponding to each y value.}

\item{labels}{If true, each dot will be labeled with its row number.}
}
\value{
A  k-PCA plot generated with ggplot2.
}
\description{
kernel PCA
}
\examples{
kernPCA(soil$abund,kernel="clin", y=soil$metadata$phd, colors=c("orange","orchid3"),
title = "Soil kernel PCA",legend = TRUE)
## Heterogeneous data fusion case
Airway <- list()
Airway$nosel <- CSSnorm(smoker$abund$oroL)
Airway$throatl <- CSSnorm(smoker$abund$oroR)
smoking <- smoker$metadata$smoker[seq(from=1,to=62*4,by=4)]
kernPCA(data=Airway,kernel=rep("jac",2),title="Airway samples",y=smoking)#'
}
